//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
class GfG
{
    public static void main (String[] args)
    {
        
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            String s = sc.next ();
            int k = sc.nextInt();
    		System.out.println (new Solution().substrCount (s, k));
        }
        
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution
{
    	
	public static long getSubstringsCountWithAtmostKCharacters(String s, int k) {
		int n = s.length();
		long count=0;
		HashMap<Character,Integer> d = new HashMap<>();  // to keep track of distinct elements
		int i=0;
		for(int j=0;j<n;j++) {
			d.put(s.charAt(j),d.getOrDefault(s.charAt(j), 0) + 1);
			while(d.size() > k ) {
				d.put(s.charAt(i),d.getOrDefault(s.charAt(i), 0) - 1);
				if(d.get(s.charAt(i))== 0)
					d.remove(s.charAt(i));
				i++;
				
			}
			//System.out.println(d.size());
			count+= j-i+1;
		}
		return count;
	}

    long substrCount (String S, int K) {
		int n = S.length();
        long ans = getSubstringsCountWithAtmostKCharacters(S,K) - getSubstringsCountWithAtmostKCharacters(S,K-1);
        return ans;
    }
}
